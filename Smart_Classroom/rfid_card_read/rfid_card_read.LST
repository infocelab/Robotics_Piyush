C51 COMPILER V9.52.0.0   RFID_CARD_READ                                                    07/23/2015 10:36:06 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE RFID_CARD_READ
OBJECT MODULE PLACED IN rfid_card_read.OBJ
COMPILER INVOKED BY: G:\Program Files\Keil\C51\BIN\C51.EXE rfid_card_read.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          //#include<reg52.h> //including sfr registers for ports of the controller
   3          #include<lcd.h>
   4          #include<stdlib.h>
   5          
   6          //LCD Module Connections
   7          sbit RS = P0^0;                                                                   
   8          sbit EN = P0^1;                            
   9          sbit D0 = P2^0;
  10          sbit D1 = P2^1;
  11          sbit D2 = P2^2;
  12          sbit D3 = P2^3;
  13          sbit D4 = P2^4;
  14          sbit D5 = P2^5;
  15          sbit D6 = P2^6;
  16          sbit D7 = P2^7;
  17          //End LCD Connections
  18          
  19          //Keypad Connections
  20          sbit R1 = P1^0;
  21          sbit R2 = P1^1;
  22          sbit R3 = P1^2;
  23          sbit R4 = P1^3;
  24          sbit C1 = P1^4;
  25          sbit C2 = P1^5;
  26          sbit C3 = P1^6;
  27          sbit C4 = P1^7;
  28          //End Keypad Connections
  29          
  30          char card_id[12];     // stores the 12 digit ID
  31          int lock=0;               // to lock the door after the teacher enters
  32          char teacher[12]={"FE005F734290"};
  33          char attendance[3];
  34          char student[3][12]=  {
  35              {'F','E','0','0','5','F','4','9','C','2','2','A'},
  36              {'1','3','0','0','4','0','B','C','B','E','5','1'},
  37              {'1','3','0','0','4','A','0','4','A','B','F','6'}
  38            };
  39          //unsigned char password[4];
  40          
  41          /******************* Function to generate delay in microseconds********************/
  42            void delay(int x)       
  43             {
  44   1          int i,j;
  45   1          for(i=0;i<x;i++)
  46   1              for(j=0;j<100;j++);
  47   1         }
  48          /********************Function to recieve data serially from RS232******************/   
  49             void recieve()          
  50             {
  51   1           unsigned char k;      
  52   1           for(k=0;k<12;k++)
  53   1           { 
  54   2             while(RI==0);        
  55   2             card_id[k] = SBUF;
C51 COMPILER V9.52.0.0   RFID_CARD_READ                                                    07/23/2015 10:36:06 PAGE 2   

  56   2             RI=0;
  57   2           }
  58   1         }    
  59          /************* Function to print the default message at idle state*****************/
  60              void default_msg()    
  61              {
  62   1            Lcd8_Clear();
  63   1            Lcd8_Set_Cursor(1,1);
  64   1            Lcd8_Write_String("Show Your RFID");
  65   1            Lcd8_Set_Cursor(2,6);
  66   1            Lcd8_Write_String("Card");    
  67   1          }
  68          /********************************Function to Close the Door******************************/
  69              void close_door()
  70              {
  71   1            Lcd8_Clear();
  72   1            Lcd8_Set_Cursor(2,1);
  73   1            Lcd8_Write_String("Closing Door..");
  74   1            delay(1000);
  75   1          }
  76          /********************************Function to Open Door******************************/
  77              void open_door()
  78              {
  79   1            
  80   1            Lcd8_Set_Cursor(2,1);
  81   1            Lcd8_Write_String("Opening Door..");
  82   1            delay(2000);
  83   1            close_door();
  84   1          }
  85          
  86            /*  char Read_Keypad()
  87          {
  88            C1=1;
  89            C2=1;
  90            C3=1;
  91            C4=1;
  92            R1=0;
  93            R2=1;
  94            R3=1;
  95            R4=1;
  96            if(C1==0){delay(100);while(C1==0);return '1';}
  97            if(C2==0){delay(100);while(C2==0);return '2';}
  98            if(C3==0){delay(100);while(C3==0);return '3';}
  99            if(C4==0){delay(100);while(C4==0);return 'A';}
 100            R1=1;
 101            R2=0;
 102            R3=1;
 103            R4=1;
 104            if(C1==0){delay(100);while(C1==0);return '4';}
 105            if(C2==0){delay(100);while(C2==0);return '5';}
 106            if(C3==0){delay(100);while(C3==0);return '6';}
 107            if(C4==0){delay(100);while(C4==0);return 'B';}
 108            R1=1;
 109            R2=1;
 110            R3=0;
 111            R4=1;
 112            if(C1==0){delay(100);while(C1==0);return '7';}
 113            if(C2==0){delay(100);while(C2==0);return '8';}
 114            if(C3==0){delay(100);while(C3==0);return '9';}
 115            if(C4==0){delay(100);while(C4==0);return 'C';}
 116            R1=1;
 117            R2=1;
C51 COMPILER V9.52.0.0   RFID_CARD_READ                                                    07/23/2015 10:36:06 PAGE 3   

 118            R3=1;
 119            R4=0;
 120            if(C1==0){delay(100);while(C1==0);return '*';}
 121            if(C2==0){delay(100);while(C2==0);return '0';}
 122            if(C3==0){delay(100);while(C3==0);return '#';}
 123            if(C4==0){delay(100);while(C4==0);return 'D';}
 124            return 0;
 125          }
 126              */
 127          /***********************Function to input & check Password from Keypad*****************/
 128          /*    int check_password(int std)
 129              {
 130                int i;
 131                char c;
 132                char temp[4];
 133                Lcd8_Clear();
 134                Lcd8_Set_Cursor(1,1);
 135                Lcd8_Write_String("Enter Password:");
 136                i=0;
 137                while(i!=4)
 138                {
 139                  while(!(c = Read_Keypad()));
 140                  temp[i]=c;
 141                  i++;
 142                }
 143                for(i=0;i<4;i++)
 144                {
 145                  if(temp[i]!=1)
 146                    return 0;
 147                } 
 148                return 1;
 149              }
 150            */  
 151              /****************** Function to check whose ID has been shown**********************/    
 152              void check()          
 153              {
 154   1            int i,j;
 155   1            int student_flag=0,teacher_flag=0;
 156   1            
 157   1            for(i=0;i<12;i++)
 158   1            {
 159   2              if(card_id[i] != teacher[i])
 160   2              { 
 161   3                student_flag=1;
 162   3                break;
 163   3              } 
 164   2              else
 165   2              teacher_flag=1;
 166   2            }
 167   1            
 168   1            if(student_flag==1 && lock==0)  // if ID is of students' & door is unlocked
 169   1            {
 170   2              for(i=0;i<3;i++)
 171   2              {
 172   3                for(j=0;j<12;j++)
 173   3                {
 174   4                  if(card_id[j] != student[i][j])
 175   4                    break;
 176   4                  if(j==11)
 177   4                  {
 178   5                    Lcd8_Clear();
 179   5                    Lcd8_Set_Cursor(1,4);
C51 COMPILER V9.52.0.0   RFID_CARD_READ                                                    07/23/2015 10:36:06 PAGE 4   

 180   5                    Lcd8_Write_String("Student");
 181   5                    Lcd8_Write_Char(i+1+48);
 182   5                    attendance[i]=1;
 183   5                    delay(1000);
 184   5                    Lcd8_Set_Cursor(1,1);             
 185   5                /*    if(check_password(i)==1)
 186   5                    {
 187   5                      Lcd8_Write_String("Access Granted..");
 188   5                      open_door();
 189   5                    }
 190   5                    else              
 191   5                    {
 192   5                      Lcd8_Set_Cursor(1,1);
 193   5                      Lcd8_Write_String("Password NOT");
 194   5                      Lcd8_Set_Cursor(2,1);
 195   5                      Lcd8_Write_String("Matched!");
 196   5                    }*/
 197   5                  }
 198   4                }
 199   3              }
 200   2            }
 201   1            else if(student_flag==1 && lock==1) // if ID is of students' but the door is Locked!
 202   1            {
 203   2              Lcd8_Clear();
 204   2              Lcd8_Set_Cursor(1,2);
 205   2              Lcd8_Write_String("The Door is");
 206   2              Lcd8_Set_Cursor(2,4);
 207   2              Lcd8_Write_String("LOCKED!");
 208   2            }
 209   1            else if(teacher_flag==1 && lock==1) // if teacher wants to go outside the class
 210   1            {
 211   2              Lcd8_Clear();
 212   2              Lcd8_Set_Cursor(1,4);
 213   2              Lcd8_Write_String("TEACHER");
 214   2              open_door();      
 215   2              lock=0;   // Unlock the door
 216   2              for(i=0;i<3;i++)      
 217   2                attendance[i]=0;      // after teacher exits, put all attendances to 0
 218   2            }
 219   1            else if(teacher_flag==1 && lock==0)   // teacher enters the classroom. The
 220   1            {                                     //  door is now locked!
 221   2              Lcd8_Clear();
 222   2              Lcd8_Set_Cursor(1,4);
 223   2              Lcd8_Write_String("TEACHER"); 
 224   2              delay(500);
 225   2              open_door();
 226   2              Lcd8_Clear();
 227   2              Lcd8_Set_Cursor(1,1);
 228   2              Lcd8_Write_String("Locking Door..");
 229   2              delay(2000);
 230   2              lock=1;   // Lock the door. No student can now enter the classroom!
 231   2              for(i=0;i<3;i++)
 232   2              {
 233   3                if(attendance[i] == 0)
 234   3                {
 235   4                  Lcd8_Clear();
 236   4                  Lcd8_Set_Cursor(1,1);
 237   4                  Lcd8_Write_String("Absent Students:");
 238   4                  Lcd8_Set_Cursor(2,3);
 239   4                  Lcd8_Write_String("Student");
 240   4                  Lcd8_Write_Char(i+1+48);
 241   4                  delay(1000);
C51 COMPILER V9.52.0.0   RFID_CARD_READ                                                    07/23/2015 10:36:06 PAGE 5   

 242   4                }
 243   3              }
 244   2            }
 245   1            else
 246   1            {
 247   2              Lcd8_Clear();
 248   2              Lcd8_Set_Cursor(1,1);
 249   2              Lcd8_Write_String("WOOPS..!!");
 250   2              delay(2000);
 251   2            }
 252   1          }
 253          /**************************** Begin main function**********************************/      
 254              void main()               
 255              { 
 256   1            int len;
 257   1            char *welcome="WELCOME";
 258   1            TMOD=0x20; //Enable Timer 1
 259   1            TH1=0XFD;
 260   1            SCON=0x50;
 261   1            TR1=1; 
 262   1            Lcd8_init();
*** WARNING C206 IN LINE 262 OF rfid_card_read.c: 'Lcd8_init': missing function-prototype
 263   1            Lcd8_Set_Cursor(1,1);
 264   1            //welcome = (char *) malloc(sizeof(char));
 265   1            //welcome="WELCOME";
 266   1            delay(200);
 267   1            Lcd8_Set_Cursor(1,3);
 268   1            Lcd8_Write_String(welcome);
 269   1            delay(2000);
 270   1            default_msg();
 271   1                  
 272   1          while(1)
 273   1          {
 274   2              recieve();
 275   2              Lcd8_Clear();
 276   2              //check();
 277   2              delay(1000);
 278   2              default_msg();
 279   2          }
 280   1            
 281   1            
 282   1      }
*** WARNING C280 IN LINE 256 OF rfid_card_read.c: 'len': unreferenced local variable
*** WARNING C290 IN LINE 84 OF rfid_card_read.c: missing return value
*** WARNING C290 IN LINE 176 OF rfid_card_read.c: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1252    ----
   CONSTANT SIZE    =    136    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     65      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
